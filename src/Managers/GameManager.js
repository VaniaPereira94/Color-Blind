import LevelManager from "../Managers/LevelManager";
import TileMapManager from "../Managers/TileMapManager";
import { PLAYER_STATE } from "../Sprites/PlayerSprite";
import UIUtil from "../Utils/UIUtil";

import clockSound from "../assets/sounds/clock-sound.wav";
import loseSound from "../assets/sounds/lose-sound.wav";
import fireworksSound from "../assets/sounds/fireworks-sound.wav";
import winSound from "../assets/sounds/win-sound.mp3";

import level1Music from "../assets/musics/background-1-music.mp3";
import level2Music from "../assets/musics/background-2-music.mp3";
import level3Music from "../assets/musics/background-3-music.mp3";
import level4Music from "../assets/musics/background-4-music.mp3";
import level5Music from "../assets/musics/background-5-music.mp3";

class GameManager {
   constructor(canvas, context, numberOfLevels) {
      this.canvas = canvas;
      this.context = context;
      this.numberOfLevels = numberOfLevels;

      this.currentLevelIndex = -1;
      this.currentLevel = null;

      this.clockAudio = new Audio(clockSound);
      this.loseAudio = new Audio(loseSound);
      this.fireworksAudio = new Audio(fireworksSound);
      this.winAudio = new Audio(winSound);

      const tsParticles = window.tsParticles;

      tsParticles.load("tsparticles", {
         fullScreen: {
            enable: true
         },
         detectRetina: true,
         background: {
            opacity: 0
         },
         fpsLimit: 60,
         emitters: {
            autoPlay: false,
            name: "win",
            direction: "top",
            life: {
               count: 0,
               duration: 0.1,
               delay: 0.1
            },
            rate: {
               delay: 0.15,
               quantity: 1
            },
            size: {
               width: 100,
               height: 0
            },
            position: {
               y: 75,
               x: 50
            }
         },
         particles: {
            number: {
               value: 0
            },
            destroy: {
               mode: "split",
               split: {
                  count: 1,
                  factor: { value: 1 / 3 },
                  rate: {
                     value: 100
                  },
                  particles: {
                     stroke: {
                        color: {
                           value: [
                              "#ffffff",
                              "#b22234",
                              "#b22234",
                              "#3c3bfe",
                              "#3c3bfe",
                              "#3c3bfe"
                           ]
                        },
                        width: 1
                     },
                     number: {
                        value: 0
                     },
                     collisions: {
                        enable: false
                     },
                     opacity: {
                        value: 1,
                        animation: {
                           enable: true,
                           speed: 0.7,
                           minimumValue: 0.1,
                           sync: false,
                           startValue: "max",
                           destroy: "min"
                        }
                     },
                     shape: {
                        type: "circle"
                     },
                     size: {
                        value: 1,
                        animation: {
                           enable: false
                        }
                     },
                     life: {
                        count: 1,
                        duration: {
                           value: {
                              min: 1,
                              max: 2
                           }
                        }
                     },
                     move: {
                        enable: true,
                        gravity: {
                           enable: false
                        },
                        speed: 2,
                        direction: "none",
                        random: true,
                        straight: false,
                        outMode: "destroy"
                     }
                  }
               }
            },
            life: {
               count: 1
            },
            shape: {
               type: "line"
            },
            size: {
               value: 50,
               animation: {
                  enable: true,
                  sync: true,
                  speed: 150,
                  startValue: "max",
                  destroy: "min"
               }
            },
            stroke: {
               color: {
                  value: "#ffffff"
               },
               width: 1
            },
            rotate: {
               path: true
            },
            move: {
               enable: true,
               gravity: {
                  acceleration: 15,
                  enable: true,
                  inverse: true,
                  maxSpeed: 100
               },
               speed: { min: 10, max: 20 },
               outModes: {
                  default: "destroy",
                  top: "none"
               },
               trail: {
                  fillColor: "#fff",
                  enable: false,
                  length: 10
               }
            }
         }
      });

      // 1 - div das partículas dos foguetes
      this.tsparticlesContainer = tsParticles.domItem(1);
   }

   startLevel(levelIndex) {
      this.currentLevelIndex = levelIndex;
      const levelProperties = this.getLevelProperties(this.currentLevelIndex);

      this.currentLevel = new LevelManager(
         this.canvas,
         this.context,
         levelProperties.tileMap,
         levelProperties.time,
         levelProperties.musicPath
      );
      this.runLevel(0);  // o parâmetro é necessário para iniciar o relógio de jogo
   }

   runLevel = (estimatedTime) => {
      // se ainda não carregou o mapa todo
      if (!this.currentLevel.loadedLevel) {
         requestAnimationFrame(this.runLevel);
         return;
      }

      // após o relógio iniciar (quando o mapa é carregado)
      if (this.currentLevel.timer.started) {
         this.currentLevel.timer.currentTime = estimatedTime + this.currentLevel.timer.fullTime;
         this.currentLevel.timer.started = false;
      }
      // quando o tempo do relógio acabar
      else {
         if (estimatedTime >= this.currentLevel.timer.currentTime) {
            this.currentLevel.timer.finished = true;
            this.currentLevel.stopMusic();
            this.clockAudio.pause();

            UIUtil.toggleScreen("losePopup", true);
            this.backToMenu("losePopup");
            this.restartLevel("losePopup");
            this.loseAudio.play();
            return;
         }
      }

      // quando o jogado morre pelo inimigo
      if (this.currentLevel.player.state === PLAYER_STATE.DEAD) {
         this.currentLevel.stopMusic();
         this.clockAudio.pause();

         UIUtil.toggleScreen("tsparticlesCursor", true);
         UIUtil.toggleScreen("losePopup", true);
         this.backToMenu("losePopup");
         this.restartLevel("losePopup");
         this.loseAudio.play();
         return;
      }

      // quando o jogador completa a sequência
      if (this.currentLevel.player.state === PLAYER_STATE.ALIVE_AND_FREE) {
         this.currentLevel.stopMusic();

         // mostrar a popup de ganhar do último nível
         if (this.numberOfLevels === this.currentLevelIndex) {
            this.clockAudio.pause();

            UIUtil.toggleScreen("tsparticlesCursor", true);
            UIUtil.toggleScreen("winLastLevelPopup", true);
            this.backToMenu("winLastLevelPopup");
            this.tsparticlesContainer.playEmitter("win");
            this.fireworksAudio.play();
            this.winAudio.play();
         }
         // mostrar a popup de ganhar normal
         else {
            this.clockAudio.pause();

            UIUtil.toggleScreen("tsparticlesCursor", true);
            UIUtil.toggleScreen("winPopup", true);
            this.backToMenu("winPopup");
            this.goToNextLevel("winPopup");
            this.tsparticlesContainer.playEmitter("win");
            this.fireworksAudio.play();
            this.winAudio.play();
         }

         return;
      }

      this.currentLevel.timer.currentTimeInSeconds = this.currentLevel.timer.currentTime - estimatedTime;

      if (this.currentLevel.timer.currentTimeInSeconds < 15000) {
         if (!this.audioIsPlaying(this.clockAudio)) {
            this.clockAudio.play();
         }
      }

      // continuar ciclo do jogo até acabar o nível ou ser interrompido
      if (!this.currentLevel.timer.finished) {
         this.currentLevel.update(estimatedTime);
         this.currentLevel.draw();
         requestAnimationFrame(this.runLevel);
      }
   }

   backToMenu(popupID) {
      document.querySelector(`#${popupID} .popup-back-to-menu-button`).onclick = () => {
         this.tsparticlesContainer.pauseEmitter("win");
         UIUtil.toggleScreen(popupID, false);
         UIUtil.toggleScreen("menuScreen", true);
         UIUtil.toggleScreen("gameScreen", false);
         UIUtil.toggleScreen("gameScreenUI", false);
      };
   }

   restartLevel(popupID) {
      document.querySelector(`#${popupID} .popup-restart-level-button`).onclick = () => {
         this.tsparticlesContainer.pauseEmitter("win");
         UIUtil.toggleScreen(popupID, false);
         UIUtil.toggleScreen("tsparticlesCursor", false);
         this.startLevel(this.currentLevelIndex);
      };
   }

   goToNextLevel(popupID) {
      document.querySelector(`#${popupID} .popup-go-to-next-level-button`).onclick = () => {
         this.tsparticlesContainer.pauseEmitter("win");
         UIUtil.toggleScreen(popupID, false);
         UIUtil.toggleScreen("tsparticlesCursor", false);
         this.currentLevelIndex = this.getNextLevelIndex();
         this.startLevel(this.currentLevelIndex);
      };
   }

   audioIsPlaying(audio) {
      return !audio.paused;
   }

   getNextLevelIndex() {
      let index = -1;

      if (this.currentLevelIndex < this.numberOfLevels) {
         index = this.currentLevelIndex + 1;
      }

      return index;
   }

   getLevelProperties(levelIndex) {
      let map;
      let tileSize;
      let width;
      let height;
      let scale;
      let tileMap;
      let time;
      let musicPath;
      let numberOfTilesInHeight = 9;

      switch (levelIndex) {
         case 1:
            map = {
               layers: [[
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, -1, -1 - 1],
                  [-1, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, -1, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1],
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
               ],
               [
                  [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, 10, 10, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, 10, 10, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 97, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, 10, 10, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, 4, 4, 4, 5],
                  [3, -1, -1, -1, 11, 15, 15, 15, 15, 12, -1, -1, -1, 3, 97, -1, -1, -1, -1, 5, 10, 10, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 13, 2, 2, 2, 2, 14, -1, -1, -1, 8, 4, 4, 4, -1, -1, 5, 10, 10, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 9, 9, 9, 9, 9, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, 10, 10, 3, -1, -1, -1, 4, 4, 18, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, 4, 4, 4, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, 10, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, 2, 2, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 9, 9, 4, 4, 4, 4, 17, -1, -1, -1, -1, 8, 4, 4, 4, 4, 4, 7, -1, -1, 4, 4, 4, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 98, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 98, -1, -1, -1, 5],
                  [3, 4, 4, 4, 4, 4, -1, -1, -1, -1, 5, 4, 4, 4, 4, 4, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 4, 4, 4, 4, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, 4, 4, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 15, 15, 15, 12, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 4, 4, 4, 4, 4, 7, -1, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 13, 2, 2, 2, 14, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 9, 9, 9, 9, 9, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 96, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5],
                  [8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7]
               ]]
            };

            tileSize = 32;
            width = map.layers[0][0].length * tileSize;
            height = map.layers[0].length * tileSize;
            scale = (window.innerHeight / numberOfTilesInHeight / tileSize);
            tileMap = new TileMapManager(tileSize, map, width, height, scale);

            time = 120000;  // milissegundos
            musicPath = level1Music;
            break;
         case 2:
            map = {
               layers: [[
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, -1, -1, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, -1, -1, -1, -1, -1, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
               ],
               [
                  [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, 97, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, 4, 4, 4, 17, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, 16, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, 4, 4, 4, 4, 4, 4, 7, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 4, 4, 4, 4, 4, 4, 18, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, 98, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, 98, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, 16, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 17, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 3, -1, -1, -1, -1, 8, 4, 4, 4, 4, 4, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, 16, 4, 4, 4, 4, 4, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, 97, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, 19, 4, 4, 4, 4, 4, 4, 4, 4, 18, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 96, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7],
               ]]
            };

            tileSize = 32;
            width = map.layers[0][0].length * tileSize;
            height = map.layers[0].length * tileSize;
            scale = (window.innerHeight / numberOfTilesInHeight / tileSize);
            tileMap = new TileMapManager(tileSize, map, width, height, scale);

            time = 120000;
            musicPath = level2Music;
            break;
         case 3:
            map = {
               layers: [[
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                  [-1, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1],
                  [-1, -1, -1, -1, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 22, 21, 21, 21, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1],
                  [-1, -1, -1, -1, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1],
                  [-1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1],
                  [-1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, -1, -1, -1, -1],
                  [-1, 21, 21, 21, 21, 21, 21, 21, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, -1, -1, -1, -1],
                  [-1, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, -1, -1, -1, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, -1, -1, -1, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, -1, -1, -1, -1, -1, -1, -1, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 22, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, -1, -1, -1, -1, -1, -1, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1],
                  [-1, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, 21, 21, -1, 21, 21, 21, 22, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1],
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
               ],
               [
                  [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6],
                  [3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5, 10, 10, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 96, -1, 5],
                  [3, 97, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5, 10, 10, 10, 3, 97, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5, 10, 10, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 5],
                  [29, 15, 15, 12, -1, -1, -1, 3, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 5, 10, 10, 10, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 17, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 5],
                  [1, 2, 2, 14, -1, -1, -1, 3, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 19, 2, 2, 2, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 5],
                  [3, 23, 24, 9, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 27, 23, 24, 9, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 5],
                  [3, 25, 26, 9, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 27, 25, 26, 9, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, -1, 97, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, 11, 15, 15, 7],
                  [3, -1, -1, -1, -1, -1, -1, -1, 16, 4, 4, 4, 7, -1, -1, 98, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, 8, 2, 2, 6],
                  [3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, 23, 24, 9, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 16, 4, 4, 4, 4, 17, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, 25, 26, 9, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, 95, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, 19, 4, 4, 4, 4, 4, 4, 4, 7, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, 8, 4, 4, 4, 4, 4, 4, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 8, 4, 4, 4, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, 16, 4, 4, 4, 4, 4, 17, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, 99, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, 97, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7],
               ]]
            };

            tileSize = 32;
            width = map.layers[0][0].length * tileSize;
            height = map.layers[0].length * tileSize;
            scale = (window.innerHeight / numberOfTilesInHeight / tileSize);
            tileMap = new TileMapManager(tileSize, map, width, height, scale);

            time = 120000;
            musicPath = level3Music;
            break;
         case 4:
            map = {
               layers: [[
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                  [-1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, -1, 20, 20, 20, -1, -1, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, -1, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, -1, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, -1, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, -1, -1, -1, -1, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, -1, -1, -1, -1, -1, -1, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, -1, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, -1, -1, -1, -1, -1, -1, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, -1],
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
               ],
               [
                  [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6],
                  [3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, 3, -1, -1, -1, 4, 4, 17, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 16, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 17, -1, -1, -1, 5],
                  [3, -1, -1, -1, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, -1, -1, 97, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, 3, -1, -1, -1, -1, -1, 3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, 8, 4, 4, 4, 4, 4, 18, -1, -1, -1, 8, 4, 4, 4, 4, 4, 4, 7, -1, -1, -1, -1, 98, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, 95, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 97, -1, 3, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 3, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, 4, 4, 4, 4, 4, 4, 3, -1, -1, -1, 4, 4, 4, 18, -1, -1, -1, 5],
                  [3, 97, -1, -1, -1, -1, -1, -1, -1, -1, 5, 20, 20, 20, 3, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, 20, 20, 20, 3, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, 4, 4, 4, 4, 4, 4, -1, -1, -1, 5, -1, -1, -1, 3, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 8, 4, 4, 4, 4, 7, -1, -1, -1, 5, 4, 4, 4, 4, 4, 4, -1, -1, -1, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [3, -1, 99, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, 97, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 96, -1, 5],
                  [3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
                  [8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7],
               ]]
            };

            tileSize = 32;
            width = map.layers[0][0].length * tileSize;
            height = map.layers[0].length * tileSize;
            scale = (window.innerHeight / numberOfTilesInHeight / tileSize);
            tileMap = new TileMapManager(tileSize, map, width, height, scale);

            time = 120000;
            musicPath = level4Music;
            break;
         case 5:
            map = {
               layers: [[
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1],
                  [-1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 21, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 21, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1],
                  [-1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1],
                  [-1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1],
                  [-1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 21, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
                  [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
               ],
               [[1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6],
               [3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 97, -1, 5, -1, -1, -1, 5, 10, 10, 3, 97, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 5, 10, 10, 3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 19, 2, 2, 18, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 15, 15, 15, 30],
               [3, -1, -1, -1, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, -1, -1, -1, 5, -1, -1, -1, 27, 23, 24, 28, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, 2, 2, 2, 6],
               [3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 27, 25, 26, 28, -1, -1, -1, 8, 4, 4, 4, 4, 4, 4, 17, -1, -1, -1, -1, 9, 9, 9, 9, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, -1, 95, -1, -1, -1, -1, 5, -1, -1, -1, 4, 4, 4, 4, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 4, 4, 4, 4, 4, 17, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 19, 4, 4, 4, 4, 4, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 8, 4, 4, 4, 4, 4, 4, 4, 7, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5, 97, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, 8, 4, 4, 4, 17, -1, -1, -1, -1, 16, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 16, 4, 4, 4, 4, 4, 4, 4, 4, 4, 17, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
               [29, 15, 15, 15, 12, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 3, -1, -1, -1, -1, 3, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, 96, -1, 5],
               [1, 2, 2, 2, 14, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 3, -1, -1, 97, -1, 3, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5],
               [3, 9, 9, 9, 9, -1, -1, -1, 3, -1, -1, -1, 4, 4, 4, 4, 4, 7, -1, -1, -1, 8, 4, 4, 4, 4, 3, -1, -1, -1, 5, -1, -1, -1, -1, -1, 4, 4, 4, 4, 18, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, 99, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5, -1, -1, -1, 98, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [3, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5],
               [8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7],
               ]]
            };

            tileSize = 32;
            width = map.layers[0][0].length * tileSize;
            height = map.layers[0].length * tileSize;
            scale = (window.innerHeight / numberOfTilesInHeight / tileSize);
            tileMap = new TileMapManager(tileSize, map, width, height, scale);

            time = 120000;
            musicPath = level5Music;
            break;
         default:
            break;
      }

      return {
         tileSize: tileSize,
         width: width,
         height: height,
         tileMap: tileMap,
         time: time,
         musicPath: musicPath
      }
   }
}

export default GameManager